# -*- coding: utf-8 -*-
"""model.pkl

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cM05InGp97NMQFxYNDCOE0p14llWF_9t
"""

# Step 1: Install dependencies (in Colab)
!pip install pandas seaborn scikit-learn matplotlib

# Step 2: Import libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, r2_score
import pickle

# Step 3: Load dataset
# Original Google Drive sharing link: "https://drive.google.com/file/d/1NN5bSAc7F6N63skGrzmfE-VO71eOe35a/view?usp=sharing"
# Construct a direct download URL for Google Drive
file_id = "1NN5bSAc7F6N63skGrzmfE-VO71eOe35a"
url = f"https://drive.google.com/uc?id={file_id}&export=download"

df = pd.read_csv(url)
display(df.head())

# Step 4: Split features & target
X = df[['TV', 'Radio', 'Newspaper']]
y = df['Sales']

X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42
)

# Step 5: Train model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Predictions & evaluation
y_pred = model.predict(X_test)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"MAE: {mae:.2f}")
print(f"R² Score: {r2:.2f}")

# Step 7: Visualization
plt.figure(figsize=(6,6))
sns.scatterplot(x=y_test, y=y_pred)
plt.xlabel("Actual")
plt.ylabel("Predicted")
plt.title("Actual vs Predicted")
plt.show()

# Step 8: Save model
with open("model.pkl", "wb") as f:
    pickle.dump(model, f)

print("✅ Model saved as model.pkl — ready for Streamlit!")